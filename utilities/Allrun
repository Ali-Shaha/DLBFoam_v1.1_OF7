#!/bin/bash

while getopts m: flag
do
    case "${flag}" in
        m) mechname=${OPTARG};;
    esac
done
echo "COMPILED MECHANISM: $mechname";

mechPath=mechanisms/$mechname/

[[ -d foam_mech ]] && rm -r foam_mech
mkdir foam_mech

if [ ! -f $mechPath/chem.foam ] ||
   [ ! "$(grep -c elements $mechPath/chem.foam)" -gt 0 ] ||
   [ ! "$(grep -c reaction $mechPath/chem.foam)" -gt 0 ];
then
    echo "OVERWRITING chem.foam."    

    # make the chem.foam file for pyJac
    #Determine the species within a pyjac output file
    grep -A100000 'Species Indexes' "$mechPath/out/mechanism.h"  > tmp.txt
    grep -B100000 '*/' tmp.txt > tmp2.txt
    sed '1d;$d' tmp2.txt > tmp3.txt
    awk '{ print $2}' tmp3.txt > tmp4.txt
    rm -f tmp.txt tmp2.* tmp3.* 

    NS=$(cat tmp4.txt | wc -l)

    #Determine the elements within a cti mechanism file
    sed -n '/elements/,/species=/{/species=/b;p}' "$mechPath/chem.cti" > tmp5.txt
    sed 's/elements="//g; s/",//g; s/^[ \t]*// ' tmp5.txt | tr " " "\n" | sed '/^$/d' >tmp6.txt

    NE=$(cat tmp6.txt | wc -l)

    echo "//This file is for mechanism: $mechname" > tmp

    echo "elements" >> tmp
    echo "$NE" >> tmp
    echo "(" >> tmp
    cat tmp6.txt >> tmp

    printf ");\n\nspecies\n" >> tmp
    echo "$NS" >> tmp
    echo "(" >> tmp

    cat tmp tmp4.txt > "$mechPath/chem.foam"

    rm -f tmp*

    printf ");\n\nreactions\n{\n}" >> "$mechPath/chem.foam"
fi

cp -r mechanisms/$mechname/*.foam foam_mech
cp -r mechanisms/$mechname/out .
./runCmake.sh
mv build/libc_pyjac.so foam_mech
rm -rf build out
